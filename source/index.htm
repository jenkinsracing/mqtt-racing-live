<!doctype html>
<html lang="en">
<style>
#messages
{
background-color:yellow;
font-size:3;
font-weight:bold;
line-height:140%;
}
#status
{
background-color:red;
font-size:4;
font-weight:bold;
color:white;
line-height:140%;
}


</style>
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

    <title>Hello, world!</title>

    <title>Websockets Using JavaScript MQTT Client</title>
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
	  <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.js" type="text/javascript"></script>
   	<!--<script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script> -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js"></script>

  <script type = "text/javascript">

	function onConnectionLost(){
  	console.log("connection lost");
	  document.getElementById("status").innerHTML = "Connection Lost";
  	document.getElementById("status_messages").innerHTML ="Connection Lost";
	  connected_flag=0;
	}

	function onFailure(message) {
		console.log("Failed");
		document.getElementById("status_messages").innerHTML = "Connection Failed- Retrying";
    setTimeout(MQTTconnect, reconnectTimeout);
  }

	function onMessageArrived(r_message){
		out_msg="Message received "+r_message.payloadString;
		out_msg=out_msg+"      Topic "+r_message.destinationName +"<br/>";
		out_msg="<b>"+out_msg+"</b>";

    // update graphs here
  }

	function onConnected(recon,url){
	  console.log(" in onConnected " +reconn);
	}

	function onConnect() {
	  // Once a connection has been made, make a subscription and send a message.
	  document.getElementById("status_messages").innerHTML ="Connected to "+host +"on port "+port;
	  connected_flag=1;
	  document.getElementById("status").innerHTML = "Connected";
	  console.log("on Connect "+connected_flag);
    sub_topics()
	}

  function disconnect(){
		if (connected_flag==1)
			mqtt.disconnect();
	  }

  function MQTTconnect() {
	  var clean_sessions=true;
	  var user_name="";
	  var password="";

	  document.getElementById("status_messages").innerHTML ="";
	  var s = "test.mosquitto.org";
	  var p = "8080";
	  if (p!="") {
		  port=parseInt(p);
		}
	  if (s!="") {
		  host=s;
		}

	  console.log("connecting to "+ host +" "+ port +"clean session="+clean_sessions);
	  console.log("user "+user_name);
	  document.getElementById("status_messages").innerHTML='Connecting';
	  mqtt = new Paho.MQTT.Client(host,port,"clientjsaaa"); //TODO make client UUID

	  var options = {
      timeout: 3,
		  cleanSession: clean_sessions,
		  onSuccess: onConnect,
		  onFailure: onFailure,
    };

	  if (user_name !="")
		  options.userName=user_name;
	  if (password !="")
		  options.password=password;

    mqtt.onConnectionLost = onConnectionLost;
    mqtt.onMessageArrived = onMessageArrived;
    mqtt.onConnected = onConnected;
	  mqtt.connect(options);
	  return false;
	}

	function sub_topics(){
		document.getElementById("status_messages").innerHTML ="";
		if (connected_flag==0){
		  out_msg="<b>Not Connected so can't subscribe</b>"
		  console.log(out_msg);
		  document.getElementById("status_messages").innerHTML = out_msg;
		  return false;
		}
	  var stopic= "RBCube-0023a7c828e0";
	  var sqos=0;
	  if (sqos>2)
		  sqos=0;
	  console.log("Subscribing to topic ="+stopic +" QOS " +sqos);
	  document.getElementById("status_messages").innerHTML = "Subscribing to topic ="+stopic;
	  var soptions={qos:sqos,};

	  mqtt.subscribe(stopic,soptions);
	  return false;
	}

	function send_message(){
    // sending disabled
		return false;
	}

MQTTconnect();

    </script>
  </head>

  <body>
<h1>Websockets MQTT Monitor</h1>

<div id="status">Connection Status: Not Connected</div>
Status Messages:
<div id="status_messages">
</div>

<div class="container">
  <div class="row">
    <div class="col-md-10">
<div>
      <canvas id="chart-lateral" class="chartjs" width="100px" height="100px"></canvas>
    </div>
    </div>
    <div class="col-md-2">
      <div>
      <canvas id="chart-vertical" class="chartjs" width="100px" height="580px"></canvas>
    </div>
    </div>
  </div>
    <div class="row">
    <div class="col-md-12">
      <div>
        <br>
    <canvas id="chart-temp" class="chartjs" width="100px" height="10px"></canvas></td>
  </div>
  </div>
</div>
</div>

	<script>
  var data1 = {
    datasets:[{
      label:"First Dataset",
      data:[
        {x:1.0,y:1.5,r:20},
        ],
    backgroundColor:"rgb(255, 99, 132)"}]};

  var options1 = {
    //aspectRatio: 1,
    maintainAspectRatio: true,
    responsive: true,
    legend: false,
    tooltips: false,
    scales: {
            xAxes: [{
                ticks: {
                    suggestedMin: -3,
                    suggestedMax: 3
                }
            }],
            yAxes: [{
                ticks: {
                    suggestedMin: -3,
                    suggestedMax: 3
                }
            }]
        },
  };
  var chart1 = new Chart('chart-lateral', {
    type: 'bubble',
    data: data1,
    options: options1
  });

// bar graph for verticl gs
  var data2 = {
    labels:["Gs",],
    datasets:[{
      label:"First Dataset",
      data:[-2,],
    backgroundColor:"rgb(255, 99, 132)"}]};

  var options2 = {
    aspectRatio: 1,
    maintainAspectRatio: true,
    responsive: true,
    legend: false,
    tooltips: false,
    scales: {
            yAxes: [{
                ticks: {
                    min: -3,
                    max: 3
                }
            }]
        },
  };
  var chart2 = new Chart('chart-vertical', {
    type: 'bar',
    data: data2,
    options: options2
  });

// horizontal bar for temperature
  var data3 = {
    labels:["Temperature",],
    datasets:[{
      label:"First Dataset",
      data:[35,],
    backgroundColor:"rgb(255, 99, 132)"}]};

  var options3 = {
    //aspectRatio: 1,
    responsive: true,
    legend: false,
    tooltips: false,
    scales: {
            yAxes: [{
                ticks: {
                    min: 0,
                    max: 50
                }
            }]
        },
  };
  var chart3 = new Chart('chart-temp', {
    type: 'horizontalBar',
    data: data3,
    options: options3
  });

  // eslint-disable-next-line no-unused-vars
  function randomize() {
    console.log(chart.config.data.datasets[0].data)
    chart.config.data.datasets[0].data = [{x:2.0,y:2.5,r:50},];
    chart.update();
  }
	</script>
  </body>
</html>
